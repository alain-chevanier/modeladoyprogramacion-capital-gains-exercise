<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>unam.ciencias.modeladoyprogramacion</groupId>
	<artifactId>capital-gains</artifactId>
	<version>1.0</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/report/jacoco-ut/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<git-code-format-maven-plugin.version>4.2</git-code-format-maven-plugin.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- Jackson Core -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.14.2</version> <!-- Use the desired version -->
		</dependency>

		<!-- Jackson Databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.14.2</version> <!-- Use the same version as jackson-core -->
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<configuration>
					<destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
					<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
					<output>file</output>
					<includes>
						<include>com/example/demo/**</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<phase>test-compile</phase>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.cosium.code</groupId>
				<artifactId>git-code-format-maven-plugin</artifactId>
				<version>${git-code-format-maven-plugin.version}</version>
				<executions>
					<!-- On commit, format the modified java files -->
					<execution>
						<id>install-formatter-hook</id>
						<goals>
							<goal>install-hooks</goal>
						</goals>
					</execution>
					<!-- On Maven verify phase, fail if any file
                    (including unmodified) is badly formatted -->
					<execution>
						<id>validate-code-format</id>
						<goals>
							<goal>validate-code-format</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<formatterOptions>
						<!-- Use AOSP style instead of Google Style (4-space indentation). -->
						<googleJavaFormat.aosp>false</googleJavaFormat.aosp>
						<!-- Format the javadoc -->
						<googleJavaFormat.formatJavadoc>true</googleJavaFormat.formatJavadoc>
						<!-- Fix import order and remove any unused imports, but do no other formatting. -->
						<googleJavaFormat.fixImportsOnly>false</googleJavaFormat.fixImportsOnly>
						<!-- Do not fix the import order. Unused imports will still be removed. -->
						<googleJavaFormat.skipSortingImports>false</googleJavaFormat.skipSortingImports>
						<!-- Do not remove unused imports. Imports will still be sorted. -->
						<googleJavaFormat.skipRemovingUnusedImports>false</googleJavaFormat.skipRemovingUnusedImports>
					</formatterOptions>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
